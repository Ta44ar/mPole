@inject IStringLocalizer<SharedResource> res
@inject IImageService imageService

<MudDialog>
    <DialogContent>
        <MudPaper Outlined="true" Elevation="0"> 
            <MudList T="ApplicationUser">
                @foreach (var participant in Participants)
                {
                    <MudListItem>
                        <AvatarContent>
                            <MudAvatar>
                                @if (participant.ProfileImage != null && participant.ProfileImage.Length > 0)
                                {
                                    <MudImage Src="@imageService.ConvertToBase64FromByte(participant.ProfileImage)" />
                                }
                                else
                                {
                                    <MudIcon Icon="@Icons.Material.Filled.Person" Color="Color.Primary" />
                                }
                            </MudAvatar>
                        </AvatarContent>
                        <ChildContent >
                            <MudGrid Justify="Justify.SpaceBetween" Class="align-items-center">
                                <MudItem Class="d-flex align-center">
                                    <MudText Typo="Typo.body1">@participant.FirstName @participant.LastName</MudText>
                                </MudItem>
                                <MudItem>
                                    <MudIconButton Icon="@Icons.Material.Filled.Close" Color="Color.Error" OnClick="@(() => RemoveParticipant(participant))" />
                                </MudItem>
                            </MudGrid>
                        </ChildContent>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="CloseDialog" Color="Color.Primary">@res["Close"]</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    public MudDialogInstance MudDialog { get; set; }

    [Parameter]
    public List<ApplicationUser> Participants { get; set; } = new List<ApplicationUser>();

    [Parameter]
    public EventCallback<ApplicationUser> OnRemoveParticipant { get; set; }

    private void RemoveParticipant(ApplicationUser participant)
    {
        OnRemoveParticipant.InvokeAsync(participant);
    }

    private void CloseDialog()
    {
        MudDialog.Close();
    }
}