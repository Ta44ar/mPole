@page "/moves/edit/{moveId:int}"

@inject ISnackbar Snackbar
@inject NavigationManager nav
@inject IMoveService moveService
@inject IImageService imageService
@inject IStringLocalizer<SharedResource> res

<PageTitle>@res["MoveEdit"]</PageTitle>

<MoveForm move="move" editedMoveImages="editedMoveImages" isEditMode="true" />

@code {
    [Parameter]
    public int moveId { get; set; }

    private Move move = new Move();
    public ICollection<string> editedMoveImages = new List<string>();

    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            move = await moveService.GetMoveAsync(moveId);
        
            foreach (var image in move.Images)
            {
                string base64Image = image.GetBase64ImageData(imageService);
                editedMoveImages.Add(base64Image);
            }
        }
        catch (MoveException ex)
        {
            Snackbar.Add(res["ErrorDuringMoveLoading"] + $": {ex.Message}", MudBlazor.Severity.Error);
        }
        finally
        {
            isLoading = false;
        }
    }
}
